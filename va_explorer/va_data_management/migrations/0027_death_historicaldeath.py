# Generated by Django 4.1.2 on 2025-07-06 06:23

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import simple_history.models
import uuid


class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('va_data_management', '0026_remove_historicalhousehold_hh_03_and_more'),
    ]

    operations = [
        migrations.CreateModel(
            name='Death',
            fields=[
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('deviceid', models.TextField(blank=True, verbose_name='Device ID')),
                ('today', models.TextField(blank=True, verbose_name='Date Recorded')),
                ('start', models.TextField(blank=True, verbose_name='Form Start Time')),
                ('province', models.TextField(blank=True, verbose_name='Province')),
                ('district', models.TextField(blank=True, verbose_name='District')),
                ('constituency', models.TextField(blank=True, verbose_name='Constituency')),
                ('ward', models.TextField(blank=True, verbose_name='Ward')),
                ('rural_urban', models.TextField(blank=True, verbose_name='Rural/Urban')),
                ('ea', models.TextField(blank=True, verbose_name='Enumeration Area (EA)')),
                ('enumerator', models.TextField(blank=True, verbose_name='Enumerator')),
                ('supervisor', models.TextField(blank=True, verbose_name='Supervisor')),
                ('consent', models.TextField(blank=True, verbose_name='Did respondent give consent?')),
                ('code_input', models.TextField(blank=True, verbose_name='Survey Building Number (SBN)')),
                ('death_occurred', models.TextField(blank=True, verbose_name='Did death occur?')),
                ('description', models.TextField(blank=True, verbose_name='Description of Death')),
                ('respondent', models.TextField(blank=True, verbose_name="Respondent's Name")),
                ('result_other', models.TextField(blank=True, verbose_name='Other result (Specify)')),
                ('deceased_name', models.TextField(blank=True, verbose_name='Name of Deceased')),
                ('date_of_death', models.TextField(blank=True, verbose_name='Date of Death')),
                ('age_at_death', models.TextField(blank=True, verbose_name='Age at Death')),
                ('sex_of_deceased', models.TextField(blank=True, verbose_name='Sex of Deceased')),
                ('cause_of_death', models.TextField(blank=True, verbose_name='Cause of Death')),
                ('death_certificate_issued', models.TextField(blank=True, verbose_name='Death Certificate Issued')),
                ('gps_coordinates', models.TextField(blank=True, verbose_name='GPS Coordinates for Death Location')),
                ('submit_time', models.TextField(blank=True, verbose_name='Submission Time')),
                ('end', models.TextField(blank=True, verbose_name='Form End Time')),
            ],
        ),
        migrations.CreateModel(
            name='HistoricalDeath',
            fields=[
                ('uuid', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False)),
                ('deviceid', models.TextField(blank=True, verbose_name='Device ID')),
                ('today', models.TextField(blank=True, verbose_name='Date Recorded')),
                ('start', models.TextField(blank=True, verbose_name='Form Start Time')),
                ('province', models.TextField(blank=True, verbose_name='Province')),
                ('district', models.TextField(blank=True, verbose_name='District')),
                ('constituency', models.TextField(blank=True, verbose_name='Constituency')),
                ('ward', models.TextField(blank=True, verbose_name='Ward')),
                ('rural_urban', models.TextField(blank=True, verbose_name='Rural/Urban')),
                ('ea', models.TextField(blank=True, verbose_name='Enumeration Area (EA)')),
                ('enumerator', models.TextField(blank=True, verbose_name='Enumerator')),
                ('supervisor', models.TextField(blank=True, verbose_name='Supervisor')),
                ('consent', models.TextField(blank=True, verbose_name='Did respondent give consent?')),
                ('code_input', models.TextField(blank=True, verbose_name='Survey Building Number (SBN)')),
                ('death_occurred', models.TextField(blank=True, verbose_name='Did death occur?')),
                ('description', models.TextField(blank=True, verbose_name='Description of Death')),
                ('respondent', models.TextField(blank=True, verbose_name="Respondent's Name")),
                ('result_other', models.TextField(blank=True, verbose_name='Other result (Specify)')),
                ('deceased_name', models.TextField(blank=True, verbose_name='Name of Deceased')),
                ('date_of_death', models.TextField(blank=True, verbose_name='Date of Death')),
                ('age_at_death', models.TextField(blank=True, verbose_name='Age at Death')),
                ('sex_of_deceased', models.TextField(blank=True, verbose_name='Sex of Deceased')),
                ('cause_of_death', models.TextField(blank=True, verbose_name='Cause of Death')),
                ('death_certificate_issued', models.TextField(blank=True, verbose_name='Death Certificate Issued')),
                ('gps_coordinates', models.TextField(blank=True, verbose_name='GPS Coordinates for Death Location')),
                ('submit_time', models.TextField(blank=True, verbose_name='Submission Time')),
                ('end', models.TextField(blank=True, verbose_name='Form End Time')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical death',
                'verbose_name_plural': 'historical deaths',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
    ]
