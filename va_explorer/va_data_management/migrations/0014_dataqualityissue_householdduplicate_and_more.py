# Generated by Django 4.1.2 on 2025-08-28 09:13

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('contenttypes', '0002_remove_content_type_name'),
        ('va_data_management', '0013_death_key_historicaldeath_key'),
    ]

    operations = [
        migrations.CreateModel(
            name='DataQualityIssue',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('issue_type', models.CharField(choices=[('duplicate', 'Duplicate'), ('incomplete', 'Incomplete'), ('consent', 'Consent'), ('duration', 'Duration'), ('timeliness', 'Timeliness')], db_index=True, max_length=32)),
                ('signature', models.CharField(db_index=True, max_length=64, unique=True)),
                ('title', models.CharField(blank=True, max_length=255)),
                ('keys', models.JSONField(blank=True, default=dict)),
                ('details', models.JSONField(blank=True, default=dict)),
                ('status', models.CharField(choices=[('open', 'Open'), ('resolved', 'Resolved'), ('muted', 'Muted')], db_index=True, default='open', max_length=16)),
                ('detected_at', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('resolved_at', models.DateTimeField(blank=True, null=True)),
                ('resolved_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='dq_issues_resolved', to=settings.AUTH_USER_MODEL)),
                ('target_model', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='dq_issues', to='contenttypes.contenttype')),
            ],
        ),
        migrations.CreateModel(
            name='HouseholdDuplicate',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('kind', models.CharField(choices=[('exact_fields', 'Exact fields'), ('ea_hun_hhn_time', 'EA+HUN+HHN within time window'), ('admin_hun_hhn', 'Admin + HUN/HHN identical')], db_index=True, max_length=32)),
                ('keys', models.JSONField(blank=True, default=dict)),
                ('details', models.JSONField(blank=True, default=dict)),
                ('signature', models.CharField(db_index=True, max_length=64, unique=True)),
                ('resolved', models.BooleanField(default=False, help_text='Manually resolved or no longer detected.')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('households', models.ManyToManyField(related_name='duplicate_groups', to='va_data_management.household')),
            ],
            options={
                'verbose_name': 'Household duplicate group',
                'verbose_name_plural': 'Household duplicate groups',
            },
        ),
        migrations.CreateModel(
            name='DataQualityIssueMember',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('object_id', models.PositiveIntegerField()),
                ('content_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='contenttypes.contenttype')),
                ('issue', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='members', to='va_data_management.dataqualityissue')),
            ],
        ),
        migrations.AddIndex(
            model_name='dataqualityissuemember',
            index=models.Index(fields=['content_type', 'object_id'], name='va_data_man_content_fa9909_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='dataqualityissuemember',
            unique_together={('issue', 'content_type', 'object_id')},
        ),
        migrations.AddIndex(
            model_name='dataqualityissue',
            index=models.Index(fields=['issue_type', 'target_model', 'status'], name='va_data_man_issue_t_9577ff_idx'),
        ),
    ]
